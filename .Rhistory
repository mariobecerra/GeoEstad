aa<-density(simulacion1,.05)
length(aa$v)
sqrt(16384)
persp(array(aa$v,c(128,128)))
ksim1<-Kest(simulacion1)
ksim1nh<-Kinhom(simulacion1)
names(ksim1)
names(ksim1nh)
plot(ksim1$r,sqrt(ksim1$border/pi)-ksim1$r,type="l",ylim=c(-.015,.015))
abline(h=0,col=2)
lines(ksim1nh$r,sqrt(ksim1nh$border/pi)-ksim1nh$r,lty=1,col=4)
lines(ksim1nh$r,sqrt(ksim1nh$theo/pi)-ksim1nh$r,lty=1,col=3)
aa
aa$v
mod1 <- ppm(rayos.verano.ppp, ~long + lat + elev + slope + aspect + veg9)
?ppm
mod1 <- ppm(rayos.verano.ppp, ~elev + slope + aspect + veg9)
mod1 <- ppm(rayos.verano.ppp, ~elev)
?offset
mod1 <- ppm(rayos.verano.ppp, ~offset(elev))
mod1 <- ppm(rayos.ppp
)
rho.hat <- ksmooth.ppp(rayos.2$elev, sigma=1.2)
?ksmooth.ppp
rho.hat <- density.ppp(rayos.2$elev, sigma=1.2)
mod1 <- ppm(rayos.verano.ppp, covariates = elev)
puntosunif<-cbind(runif(500,0,1),runif(500,0,1))
puntosunif
head(puntosunif)
ppunif<-ppp(puntosunif[,1],puntosunif[,2])
head(ppunif)
modelo1<-ppm(ppunif,~x+y-I(x^2)-I(y^2)+I(x^2)*I(y^2))
mod1 <- ppm(rayos.verano.ppp)
rayos.verano.ppp <- as.ppp(rayos.2[rayos.2$estac=='Verano',c(1,2)], w)
mod1 <- ppm(rayos.verano.ppp)
head(puntos)
head(pol)
head(grid)
mod1 <- ppm(rayos.verano.ppp, covariates = grid[,c(3,4,5,6)])
summary(mod1)
rayos.otono.ppp <- as.ppp(rayos.2[rayos.2$estac=='Otoño',c(1,2)], w)
rayos.primav.ppp <- as.ppp(rayos.2[rayos.2$estac=='Primavera',c(1,2)], w)
mod1.verano <- ppm(rayos.verano.ppp, covariates = grid[,c(3,4,5,6)])
mod1.verano
mod0.verano <- ppm(rayos.verano.ppp)
mod0.verano
mod1.verano <- ppm(rayos.verano.ppp, trend=~elev+exp+slope+veg, covariates = grid[,c(3,4,5,6)])
nrow(grid)
?quad.ppm()
mod1.verano <- ppm(rayos.verano.ppp, trend=~elev+exp+slope+veg, covariates = quad.ppm(grid[,c(3,4,5,6)]))
mod1.verano <- ppm(rayos.verano.ppp, trend=~elev+exp+slope+veg, covariates = quad.ppm(as.ppp(grid[,c(3,4,5,6)])))
mod1.verano <- ppm(rayos.verano.ppp, trend=~elev+exp+slope+veg, covariates = quad.ppm(as.ppp(grid[,c(3,4,5,6)]),w))
mod1.verano <- ppm(rayos.verano.ppp, trend=~elev+exp+slope+veg, covariates = quad.ppm(as.ppp(grid[,c(3,4,5,6)],w)))
as.ppp(grid[,c(3,4,5,6)],w)
quad.ppm(as.ppp(grid[,c(3,4,5,6)],w))
quad.ppm(as.ppm(grid[,c(3,4,5,6)],w))
quad.ppm(as.ppm(grid[,c(3,4,5,6)]))
?as.ppm
mod1.verano <- ppm(rayos.verano.ppp, trend=~elev+exp+slope+veg, covariates = grid[,c(3,4,5,6)])
summary(mod1)
mod1
plot(mod0.verano)
plot(mod1.verano)
plot(mod1)
modelo1<-ppm(ppunif,~x+y-I(x^2)-I(y^2)+I(x^2)*I(y^2))
plot(modelo1)
mod1.verano <- ppm(rayos.verano.ppp, trend=~elev+exp+slope+veg, covariates = grid[,c(3,4,5,6)])
mod1.verano <- ppm(rayos.verano.ppp, trend=~1, covariates = grid[,c(3,4,5,6)])
mod1.verano
mod0.verano
mod1.verano <- ppm(rayos.verano.ppp, trend=~x, covariates = grid[,c(3,4,5,6)])
mod1.verano <- ppm(rayos.verano.ppp, ~x+y, covariates = grid[,c(3,4,5,6)])
mod1.verano <- ppm(rayos.verano.ppp, ~x+y)
mod1.verano
mod1.verano <- ppm(rayos.verano.ppp, ~x)
mod1.verano
mod2.verano <- ppm(rayos.verano.ppp, ~x)
mod2.verano
mod3.verano <- ppm(rayos.verano.ppp, trend=~offset(grid[,c(3,4,5,6)]), covariates = grid[,c(3,4,5,6)])
density(grid[,c(3,4,5,6)])
?ksmooth
?ksmooth.ppp
density.ppp(grid[,c(3,4,5,6)])
density.ppp(as.ppp(grid[,c(3,4,5,6)]),w)
density.ppp(as.ppp(grid[,c(3,4,5,6)],w))
rho.hat <- density.ppp(as.ppp(grid[,c(3,4,5,6)],w))
mod3.verano <- ppm(rayos.verano.ppp, trend=~offset(rho), covariates = list(rho=rho.hat))
mod3.verano
mod3.verano <- ppm(rayos.verano.ppp, trend=~offset(log(rho)), covariates = list(rho=rho.hat))
mod3.verano
head(rayos.2)
head(grid)
mod3.verano <- ppm(rayos.verano.ppp, trend=~elev+exp+sope+veg)
mod3.verano <- ppm(rayos.verano.ppp, trend=~elev+exp+sope+veg, covariates=grid[,c(3,4,5,6)])
head(grid)
mod4.verano <- ppm(rayos.verano.ppp, trend=~offset(log(rho)), covariates = list(rho=rho.hat))
options(digits=2)
library(knitr)
library(ggplot2)
library(ggthemes)
library(dplyr)
library(grid)
library(kfigr)
library(geoR)
library(spatstat)
knitr::opts_chunk$set(echo=FALSE, warning=FALSE, message=FALSE, cache=TRUE)
theme_nothing <- function(base_size = 12, base_family = "Helvetica")
{
theme_bw(base_size = base_size, base_family = base_family) %+replace%
theme(
#legend.text=element_blank(),
axis.text.x =  element_blank(),
axis.text.y =  element_blank(),
axis.title.x=  element_blank(),
axis.title.y=  element_blank(),
rect             = element_blank(),
line             = element_blank(),
#text             = element_blank(),
axis.ticks.margin = unit(0, "lines")
)
}
#Tema para hacer gráficas sin fondo gris en ggplot
empty_background <- function(base_size = 12, base_family = "Helvetica")
{
theme_bw(base_size = base_size, base_family = base_family) %+replace%
theme(
axis.ticks.margin = unit(0, "lines")
)
}
#Agrega un color más a la paleta colorblind de ggthemes
ggthemes_data$colorblind <- append(ggthemes_data$colorblind, "#80f7e9")
assignInNamespace("ggthemes_data", ggthemes_data, ns="ggthemes")
#csl descargado de: https://github.com/citation-style-language/styles/blob/master/spanish-legal.csl
#Info de: http://rmarkdown.rstudio.com/authoring_bibliographies_and_citations.html#citation-and-reference-styles
rayos <- read.csv('./Datos/rayositam.csv')
grid <- read.csv('./Datos/bmgrid3.csv')
pol <- read.table('./Datos/poligono.txt')
names(pol) <- c('lon', 'lat')
kable(head(rayos), format='latex', caption='Presentación de los datos disponibles', align='c')
rayos$mo2[nchar(rayos$mo)==1]<-paste0(0,rayos$mo[nchar(rayos$mo)==1])
rayos$mo2[nchar(rayos$mo)==2]<-rayos$mo[nchar(rayos$mo)==2]
rayos$day2[nchar(rayos$day)==1]<-paste0(0,rayos$day[nchar(rayos$day)==1])
rayos$day2[nchar(rayos$day)==2]<-rayos$day[nchar(rayos$day)==2]
rayos.2 <- rayos %>% mutate(estac=ifelse(paste0(mo2,day2)<'0621' & paste0(mo2,day2)>='0321', 'Primavera',
ifelse(paste0(mo2,day2)<'0921' & paste0(mo2,day2)>='0621', 'Verano',
ifelse(paste0(mo2,day2)<'1221' & paste0(mo2,day2)>='0921', 'Otoño', 'Invierno'))))
rayos.2$elev_cat <- cut(rayos.2$elev, breaks=6)
rayos.2$aspect_cat <- cut(rayos.2$aspect, breaks=6)
ggplot() +
#geom_polygon(data=pol, aes(x=lon, y=lat), colour='black', fill='white') +
geom_point(data=grid, aes(x=lon, y=lat, colour=elev),inherit.aes=FALSE) +
scale_colour_gradient(low = "dark green", high = "chartreuse", name='Elevación del\nterreno') +
geom_point(data=rayos, aes(x=lon, y=lat, size=size), colour='black', alpha=0.6, inherit.aes=FALSE) +
guides(size=guide_legend('Tamaño del\nincendio')) +
coord_fixed() + theme_nothing()
# ggplot(pol, aes(x=lon, y=lat)) + geom_polygon(colour='black', fill='white') +
#     geom_point(data=rayos, aes(x=lon, y=lat, colour=elev, size=size), inherit.aes=FALSE) +
#     scale_colour_gradient(low = "dark green", high = "light green", name='Elevación del\nterreno') +
#     guides(size=guide_legend('Tamaño')) +
#     coord_fixed() + theme_nothing()
rayos_elev_temp <- rayos.2 %>% group_by(yr, elev_cat) %>% summarise(Número=n()) %>% mutate(Proporción=Número/sum(Número))
ggplot(rayos_elev_temp, aes(x=elev_cat, y=Proporción)) + xlab('Elevación') + ylab('Proporción de incendios') + geom_bar(stat='identity') + guides(fill=guide_legend('hj')) + theme(axis.text.x = element_text(angle = 25, hjust = 1))
ggplot(rayos_elev_temp, aes(x=elev_cat, y=Proporción)) + xlab('Elevación') + ylab('Proporción de incendios') + geom_bar(stat='identity') + guides(fill=guide_legend('hj')) + theme(axis.text.x = element_text(angle = 35, hjust = 1)) + facet_wrap(~yr)
ggplot() +
geom_point(data=grid, aes(x=lon, y=lat, colour=elev),inherit.aes=FALSE) +
scale_colour_gradient(low = "dark green", high = "chartreuse", name='Elevación del\nterreno') +
geom_point(data=rayos, aes(x=lon, y=lat, size=size), colour='black', alpha=0.6, inherit.aes=FALSE) +
guides(size=guide_legend('Tamaño del\nincendio')) +
coord_fixed() + theme_nothing()  + facet_wrap(~yr)
rayos_veg <- rayos.2 %>% group_by(veg9) %>% summarize(Número=n())
ggplot(rayos_veg, aes(x=factor(veg9), y=Número)) + xlab('Tipo de vegetación') + ylab('Número de incendios') + geom_bar(stat='identity')
rayos_mensual.2 <- rayos.2 %>% group_by(yr, estac) %>% summarise(Número=n())
ggplot(rayos_mensual.2, aes(x=yr, y=Número, fill=factor(estac))) + xlab('Año') + ylab('Número de incendios') + geom_bar(stat='identity') + guides(fill=guide_legend('Estación')) + scale_fill_colorblind()
rayos.estacion.veg <- rayos.2[rayos.2$estac!='Invierno',] %>% group_by(estac, veg9) %>% summarize(Número=n()) %>% mutate(prop=Número/sum(Número))
ggplot(rayos.estacion.veg, aes(x=estac, y=prop, fill=factor(veg9))) + geom_bar(stat='identity') + xlab('Estación') + ylab('Proporción de incendios') + geom_bar(stat='identity') + guides(fill=guide_legend('Tipo de\nvegetación')) + scale_fill_colorblind() + empty_background()
```{r}
load('./Out/qcount50.Rdata')
load('./Out/qcount100.Rdata')
load('./Out/distancias.rayos.2.Rdata')
load('Out/rayos.ppp.Rdata')
load('Out/window.Rdata')
qcount50num <- as.numeric(qcount50)
qcount100num <- as.numeric(qcount100)
I50 <- var(qcount50num)/mean(qcount50num)
I100 <- var(qcount100num)/mean(qcount100num)
lambda <- as.numeric(as.character(summary(rayos.ppp))[4])
diag(distancias.rayos.2)<-2*max(distancias.rayos.2)
distmin <- apply(distancias.rayos.2, 1, min)
hexpect <- 1/(2*sqrt(lambda))
varh <- (4-pi) / (4*nrow(rayos.2)*lambda*pi)
#Intervalo de confianza para hbarra
ICa <- mean(distmin)-qnorm(.975)*sqrt(varh)
ICb <- mean(distmin)+qnorm(.975)*sqrt(varh)
#hbarra en el IC?
#No está
rayos.ppp.89 <- as.ppp(cbind(rayos.2$lon[rayos.2$yr==89],rayos.2$lat[rayos.2$yr==89]), w)
rayos.ppp.90 <- as.ppp(cbind(rayos.2$lon[rayos.2$yr==90],rayos.2$lat[rayos.2$yr==90]), w)
rayos.ppp.91 <- as.ppp(cbind(rayos.2$lon[rayos.2$yr==91],rayos.2$lat[rayos.2$yr==91]), w)
rayos.ppp.92 <- as.ppp(cbind(rayos.2$lon[rayos.2$yr==92],rayos.2$lat[rayos.2$yr==92]), w)
rayos.ppp.93 <- as.ppp(cbind(rayos.2$lon[rayos.2$yr==93],rayos.2$lat[rayos.2$yr==93]), w)
load('./Out/qcount50.89.Rdata')
load('./Out/qcount50.90.Rdata')
load('./Out/qcount50.91.Rdata')
load('./Out/qcount50.92.Rdata')
load('./Out/qcount50.93.Rdata')
qcount50.89num <- as.numeric(qcount50.89)
qcount50.90num <- as.numeric(qcount50.90)
qcount50.91num <- as.numeric(qcount50.91)
qcount50.92num <- as.numeric(qcount50.92)
qcount50.93num <- as.numeric(qcount50.93)
I89 <- var(qcount50.89num)/mean(qcount50.89num)
I90 <- var(qcount50.90num)/mean(qcount50.90num)
I91 <- var(qcount50.91num)/mean(qcount50.91num)
I92 <- var(qcount50.92num)/mean(qcount50.92num)
I93 <- var(qcount50.93num)/mean(qcount50.93num)
load('./Out/K.rayos.89.Rdata')
load('./Out/K.rayos.90.Rdata')
load('./Out/K.rayos.91.Rdata')
load('./Out/K.rayos.92.Rdata')
load('./Out/K.rayos.93.Rdata')
Ripley <- data.frame(border = c(K.rayos.89$border, K.rayos.90$border, K.rayos.91$border, K.rayos.92$border, K.rayos.93$border),
r = c(K.rayos.89$r, K.rayos.90$r, K.rayos.91$r, K.rayos.92$r, K.rayos.93$r),
year = c(rep(1989, nrow(K.rayos.89)), rep(1990, nrow(K.rayos.89)), rep(1991, nrow(K.rayos.89)), rep(1992, nrow(K.rayos.89)), rep(1993, nrow(K.rayos.89))))
Ripley$border2 <- Ripley$border
Ripley$border2[which(is.nan(Ripley$border))] <- Inf
RipMayores <- Ripley %>% group_by(year) %>% summarize(n=n(),nmay=sum(border2>pi*r^2)) %>% mutate(Freq = nmay/n)
RipMayores
ggplot(Ripley) + geom_line(aes(x=r, y=sqrt(border/pi) - r)) + geom_hline(0) + facet_wrap(~year) + xlab('r') + ylab('L(r) - r')
ggplot(Ripley) + geom_line(aes(x=r, y=sqrt(border/pi) - r)) + geom_hline(aes(yintercept=0)) + facet_wrap(~year) + xlab('r') + ylab('L(r) - r')
ggplot(Ripley) + geom_line(aes(x=r, y=sqrt(border/pi) - r)) + geom_hline(aes(yintercept=0), colour='blue') + facet_wrap(~year) + xlab('r') + ylab('L(r) - r')
?im
library(knitr)
library(ggplot2)
library(ggthemes)
library(dplyr)
library(grid)
library(kfigr)
library(geoR)
library(spatstat)
rayos.verano.ppp <- as.ppp(rayos.2[rayos.2$estac=='Verano',c(1,2)], w)
rayos.otono.ppp <- as.ppp(rayos.2[rayos.2$estac=='Otoño',c(1,2)], w)
rayos.primav.ppp <- as.ppp(rayos.2[rayos.2$estac=='Primavera',c(1,2)], w)
mapa.elevacion<-im(matrix(grid$elev, nrow = nrow(grid), ncol =nrow(grid), byrow=F), xcol = grid$lon, yrow = grid$lat)
mapa.veg<-im(matrix(grid$veg, nrow = nrow(grid), ncol =nrow(grid), byrow=F), xcol = grid$lon, yrow = grid$lat)
mapa.pendiente<-im(matrix(grid$slope, nrow = nrow(grid), ncol =nrow(grid), byrow=F), xcol = grid$lon, yrow = grid$lat)
600*600
grid$elev
nrow(grid)
sqrt(nrow(grid))
plot(grid$lon, grid$lat)
min(grid$lon)
max(grid$lon)
max(grid$lat)
min(grid$lat)
plot(grid$lon, grid$lat, style='p')
?plot
plot(grid$lon, grid$lat, 'p')
qplot(grid$lon, grid$lat, 'p')
qplot(grid$lon, grid$lat, 'l')
qplot(grid$lon, grid$lat)
qplot(grid$lon, grid$lat, 'p') + geom_point(size=0.1)
qplot(grid$lon, grid$lat, 'p') + geom_point(size=0.01)
ggplot(grid) + geom_point(aes(lon, lat), size=0.1)
max(grid$lat) - min(grid$lat)
max(grid$lon) - min(grid$lon)
?quadscheme
?im
mapa.elevacion<-im(grid$elev, xcol = grid$lon, yrow = grid$lat)
mapa.elevacion<-as.im(grid$elev, xcol = grid$lon, yrow = grid$lat)
mapa.elevacion<-as.im(cbind(grid$elev, xcol = grid$lon, yrow = grid$lat))
str(mapa.elevacion)
plot(str(mapa.elevacion))
plot(mapa.elevacion)
image(mapa.elevacion)
mapa.elevacion<-as.im(cbind(grid$elev, xcol = grid$lon, yrow = grid$lat))
str(mapa.elevacion)
mapa.elevacion<-as.im(grid$elev, W=w)
mapa.elevacion<-im(grid$elev, xcol = grid$lon, yrow = grid$lat)
vec.elevacion<-grid$altura
length(vec.elevacion)
length(vec.elevacion)
vec.elevacion<-grid$elev
length(vec.elevacion)
vec.elevacion<-as.real(vec.elevacion[3600:1])
mapa.elevacion<-as.im(grid$elev, W=w)
?owin
mapa.elevacion<-as.im(w)
plot(mapa.elevacion)
owin(vec.elevacion)
dat <- rayos.2[rayos.2$estac == estac, ]
head(rayos.2)
idx <- inside.owin(x=grid$lon, y=grid$lat, w=w)
bmgrid_puntos <- ppp(x = grid$lon[idx], y = grid$lat[idx], window=w)
bmgrid_puntos
plot(bmgrid_puntos)
grid_puntos <- ppp(x = grid$lon[idx], y = grid$lat[idx], window=w)
Q <- quadscheme(data=rayos.verano, dummy=grid_puntos)
Q <- quadscheme(data=rayos.verano.ppp, dummy=grid_puntos)
idx
?inside.owin
covariates <- rbind(dplyr::select(rayos.2,elev,slope,veg=veg9),
dplyr::select(grid[idx,],elev,slope,veg)) %>%
mutate(veg = factor(veg))
covariates
dim(covariates)
mod <- ppm(Q,  ~ elev+veg+slope, Poisson(), covariates = covariates)
Q <- quadscheme(data=rayos.2, dummy=grid_puntos)
Q <- quadscheme(data=rayos.verano.ppp, dummy=grid_puntos)
Q <- quadscheme(data=rayos.ppp, dummy=grid_puntos)
covariates <- rbind(dplyr::select(rayos.2,elev,slope,veg=veg9),
dplyr::select(grid[idx,],elev,slope,veg)) %>%
mutate(veg = factor(veg))
mod <- ppm(Q,  ~ elev+veg+slope, Poisson(), covariates = covariates)
summary(mod)
?select
select(rayos.2, slope)
select(rayos.2, slope, elev)
select(rayos.2)
head(rayps.2)
head(rayos.2)
select(rayos.2, lon)
select(rayos.2, lon) %>% head
dplyr::select(rayos.2, lon) %>% head
dplyr::select(rayos.2, slope, elev)
head(covariates)
head(grid[idx,])
dplyr::select(rayos.2,elev,slope,veg=veg9) %>% head
dplyr::select(rayos.2,elev,slope,veg=veg9)
dplyr::select(rayos.2,elev,slope,veg=veg9)$elev - covariates$elev
rbind(dplyr::select(rayos.2,elev,slope,veg=veg9),
dplyr::select(grid[idx,],elev,slope,veg))
rbind(dplyr::select(rayos.2,elev,slope,veg=veg9),
dplyr::select(grid[idx,],elev,slope,veg)) %>% head
rbind(dplyr::select(rayos.2,elev,slope,veg=veg9)%>% head
dplyr::select(rayos.2,elev,slope,veg=veg9)%>% head
dim(covariates)
dim(rayos.2)
2*dim(rayos.2)
dim(grid[idx,])
7855+5834
?is.duplicate
?is.duplicated
duplicated(covariables)
duplicated(covariates)
sum(duplicated(covariates))
head(covariates)
summary(mod)
Q.verano <- quadscheme(data=rayos.verano.ppp, dummy=grid_puntos)
mod <- ppm(Q.verano,  ~ elev+veg+slope, Poisson(), covariates = covariates)
?filter
dplyr(rayos.2, estac='Verano')
dplyr::filter(rayos.2, estac='Verano')
dplyr::filter(rayos.2, estac=='Verano')
rayos.verano <- dplyr::filter(rayos.2, estac=='Verano')
covariates.verano <- rbind(dplyr::select(rayos.verano,elev,slope,veg=veg9),
dplyr::select(grid[idx,],elev,slope,veg)) %>%
mutate(veg = factor(veg))
mod <- ppm(Q.verano,  ~ elev+veg+slope, Poisson(), covariates = covariates)
mod.verano <- ppm(Q.verano,  ~ elev+veg+slope, Poisson(), covariates = covariates.verano)
rayos.verano.ppp <- as.ppp(rayos.verano,c(1,2)], w)
rayos.verano.ppp <- as.ppp(rayos.verano[,c(1,2)], w)
rayos.primavera.ppp <- as.ppp(rayos.2[rayos.2$estac=='Primavera',c(1,2)], w)
Q.otono <- quadscheme(data=rayos.otono.ppp, dummy=grid_puntos)
covariates.otono <- rbind(dplyr::select(rayos.otono,elev,slope,veg=veg9),
dplyr::select(grid[idx,],elev,slope,veg)) %>%
mutate(veg = factor(veg))
mod.otono <- ppm(Q.otono,  ~ elev+veg+slope, Poisson(), covariates = covariates.otono)
Q.primavera <- quadscheme(data=rayos.primavera.ppp, dummy=grid_puntos)
covariates.primavera <- rbind(dplyr::select(rayos.primavera,elev,slope,veg=veg9),
dplyr::select(grid[idx,],elev,slope,veg)) %>%
mutate(veg = factor(veg))
mod.primavera <- ppm(Q.primavera,  ~ elev+veg+slope, Poisson(), covariates = covariates.primavera)
Q.otono <- quadscheme(data=rayos.otono.ppp, dummy=grid_puntos)
covariates.otono <- rbind(dplyr::select(rayos.otono,elev,slope,veg=veg9),
dplyr::select(grid[idx,],elev,slope,veg)) %>%
mutate(veg = factor(veg))
rayos.verano <- dplyr::filter(rayos.2, estac=='Verano')
rayos.otono <- dplyr::filter(rayos.2, estac=='Otoño')
rayos.primavera <- dplyr::filter(rayos.2, estac=='Primavera')
Q.otono <- quadscheme(data=rayos.otono.ppp, dummy=grid_puntos)
covariates.otono <- rbind(dplyr::select(rayos.otono,elev,slope,veg=veg9),
dplyr::select(grid[idx,],elev,slope,veg)) %>%
mutate(veg = factor(veg))
mod.otono <- ppm(Q.otono,  ~ elev+veg+slope, Poisson(), covariates = covariates.otono)
Q.primavera <- quadscheme(data=rayos.primavera.ppp, dummy=grid_puntos)
covariates.primavera <- rbind(dplyr::select(rayos.primavera,elev,slope,veg=veg9),
dplyr::select(grid[idx,],elev,slope,veg)) %>%
mutate(veg = factor(veg))
mod.primavera <- ppm(Q.primavera,  ~ elev+veg+slope, Poisson(), covariates = covariates.primavera)
summary(mod.primavera)
save(mod.primavera, file='mod.primavera.RData')
save(mod.verano, file='mod.verano.RData')
save(mod.otono, file='mod.otono.RData')
names(mod.primavera)
?ppm
plot(mod.primavera)
plot(mod.primavera$projected)
head(mod.primavera$projected)
sapply(mod.primavera$projected, head)
sapply(mod.primavera, head)
lapply(mod.primavera, head)
names(mod.primavera)
mod.primavera$projected
summary(mod.primavera)
trend <- predict(mod.verano ,type="trend", ngrid=100)
trend <- predict(mod.verano ,type="trend")
?predict.ppm
trend <- predict(mod.verano ,type="trend", window=w)
trend <- predict(mod.verano ,type="trend", window=w, covariates=coavariates.verano)
trend <- predict(mod.verano ,type="trend", window=w, covariates=covariates.verano)
trend <- predict(mod.verano ,type="trend", covariates=covariates.verano)
predict(mod.verano)
predict(mod.verano, covariates=covariates.verano)
plot(mod.verano)
plot(mod.verano, covariates=covariates.verano)
(mod.verano)
?ppm
mod.primavera.0 <- ppm(Q.primavera, ~x+y)
mod.primavera.0
plot(mod.primavera.0)
mod.primavera
mod.otono
plot(covariates.verano)
?effectfun
effectfun(mod.primavera, slope)
effectfun(mod.primavera, elev)
effectfun(mod.primavera, 'elev')
effectfun(mod.primavera, 'elev', covariates=covariates.primavera)
AIC(mod.primavera)
AIC(mod.primavera.0)
simulate(mod.primavera)
mod.primavera
names(mod.primavera)
mod.primavera$covariates
names(mod.primavera)
mod.primavera$coef
exp(mod.primavera$coef)
xtables(mod.primavera$coef)
library(xtables)
as.data.frame(mod.primavera$coef)
as.data.frame(Primavera=mod.primavera$coef)
cbind(mod.primavera$coef, mod.verano$coef)
cbind(mod.primavera$coef, mod.verano$coef, mod.otono$coef)
as.data.frame(cbind(mod.primavera$coef, mod.verano$coef, mod.otono$coef))
data.frame(Primavera=mod.primavera$coef, mod.verano$coef, mod.otono$coef)
data.frame(Primavera=mod.primavera$coef, Verano=mod.verano$coef, Otoño=mod.otono$coef)
CoefModelos <- data.frame(Primavera=mod.primavera$coef, Verano=mod.verano$coef, Otoño=mod.otono$coef)
kable(CoefModelos, format='latex', caption='Coeficientes de los modelos ajustanos', align='c')
CoefModelos
?row.names
row.names(CoefModelos)
cbind(CoefModelos, row.names(CoefModelos))
names(mod.verano$coef)
CoefModelos <- data.frame(Variable = names(mod.verano$coef), Primavera=mod.primavera$coef, Verano=mod.verano$coef, Otoño=mod.otono$coef, row.names=FALSE)
?data.frame
CoefModelos <- data.frame(Variable = names(mod.verano$coef), Primavera=mod.primavera$coef, Verano=mod.verano$coef, Otoño=mod.otono$coef, row.names=NULL)
CoefModelos
kable(CoefModelos, format='latex', caption='Coeficientes de los modelos ajustanos', align='c')
CoefModelos
?gather
library(tidyr)
CoefModelos %>% gather(Variable)
?gather
CoefModelos
CoefModelos %>% gather(Primavera, Verano, Otoño, Estación)
gather(Primavera, Verano, Otoño)
CoefModelos %>% gather(Primavera, Verano, Otoño)
CoefModelos %>% gather(Primavera, Verano, Otoño, Estación)
CoefModelos %>% gather(Primavera, Verano, Otoño)
CoefModelos %>% gather(Estación, Primavera)
CoefModelos %>% gather(Estación, Primavera, Verano, Otoño)
CoefModelos %>% gather(Estación, c(Primavera, Verano, Otoño))
CoefModelos %>% gather(Estación, Primavera, Verano)
CoefModelos %>% gather(key, value, Primavera, Verano, Otoño)
CoefsGraf <- CoefModelos %>% gather(Estación, Coef, Primavera, Verano, Otoño)
CoefsGraf
ggplot(CoefModelos) + geom_point(aes(x=Variable, y=Coef, color=Estación))
ggplot(CoefsGraf) + geom_point(aes(x=Variable, y=Coef, color=Estación))
ggplot(CoefsGraf) + geom_point(aes(x=Variable, y=Coef, color=Estación)) + geom_jitter()
ggplot(CoefsGraf) + geom_point(aes(x=Variable, y=Coef, color=Estación)) + geom_jitter(aes(x=Variable, y=Coef, color=Estación))
ggplot(CoefsGraf) + geom_point(aes(x=Variable, y=Coef, color=Estación)) + geom_jitter(aes(Variable))
?geom_jitter
ggplot(CoefsGraf) + geom_point(aes(x=Variable, y=Coef, color=Estación)) + position_jitter()
ggplot(CoefsGraf) + geom_point(aes(x=Variable, y=Coef, color=Estación, position='jitter'))
ggplot(CoefsGraf) + geom_point(aes(x=Variable, y=Coef, color=Estación), position='jitter')
ggplot(CoefsGraf) + geom_point(aes(x=Variable, y=Coef, color=Estación))
ggplot(CoefsGraf) + geom_point(aes(x=Variable, y=Coef, color=Estación), size=0.3)
ggplot(CoefsGraf) + geom_point(aes(x=Variable, y=Coef, color=Estación), size=3)
ggplot(CoefsGraf) + geom_point(aes(x=Variable, y=Coef, color=Estación), size=3) + geom_jitter(aes(Variable))
ggplot(CoefsGraf) + geom_point(aes(x=Variable, y=Coef, color=Estación), size=3) + geom_jitter(aes(Variable, Coef))
CoefModelos
ggplot(CoefsGraf) + geom_point(size=3) + geom_jitter(aes(x=Variable, y=Coef, color=Estación))
ggplot(CoefsGraf, aes(x=Variable, y=Coef, color=Estación)) + geom_point(size=3) + geom_jitter()
ggplot(CoefsGraf, aes(x=Variable, y=Coef, color=Estación), size=3) + geom_point() + geom_jitter()
ggplot(CoefsGraf, aes(x=Variable, y=Coef, color=Estación)) + geom_point() + geom_jitter(size=3)
ggplot(CoefsGraf, aes(x=Variable, y=Coef, color=Estación)) + geom_jitter(size=3)
ggplot(CoefsGraf, aes(x=Variable, y=Coef, color=Estación)) + geom_point(size=3)
mod.verano
mod.primavera
CoefModelos
ggplot(CoefsGraf, aes(x=Variable, y=Coeficiente, color=Estación)) + geom_point(size=3) + theme(axis.text.x = element_text(angle = 35, hjust = 1))
CoefsGraf <- CoefModelos %>% gather(Estación, Coeficiente, Primavera, Verano, Otoño)
ggplot(CoefsGraf, aes(x=Variable, y=Coeficiente, color=Estación)) + geom_point(size=3) + theme(axis.text.x = element_text(angle = 35, hjust = 1))
?kable
library("xtable", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
?xtable
?kable
ggplot(CoefsGraf, aes(x=Variable, y=Coeficiente, color=Estación)) + geom_point(size=3) + theme(axis.text.x = element_text(angle = 35, hjust = 1))  + scale_fill_colorblind()
ggplot(CoefsGraf, aes(x=Variable, y=Coeficiente, color=Estación)) + geom_point(size=3) + theme(axis.text.x = element_text(angle = 35, hjust = 1))  + scale_colorblind()
ggplot(CoefsGraf, aes(x=Variable, y=Coeficiente, color=Estación)) + geom_point(size=3) + theme(axis.text.x = element_text(angle = 35, hjust = 1))  + theme_colorblind()
ggplot(CoefsGraf, aes(x=Variable, y=Coeficiente, color=Estación)) + geom_point(size=3) + theme(axis.text.x = element_text(angle = 35, hjust = 1))  + scale_colour_colorblind()
?xtable
